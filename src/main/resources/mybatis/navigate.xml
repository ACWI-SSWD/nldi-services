<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="navigate">

    <select id="navigate" resultType="java.util.LinkedHashMap" >
        select nhdplus_navigation.navigate_cached(
               pnavigationtype           := <choose><when test="navigationMode != null">#{navigationMode,jdbcType=VARCHAR}</when><otherwise>null</otherwise></choose>
              ,pstartcomid               := <choose><when test="comid != null">#{comid,jdbcType=NUMERIC}</when><otherwise>null</otherwise></choose>
              ,pstartpermanentidentifier := null
              ,pstartreachcode           := null
              ,pstartmeasure             := null
              ,pstopcomid                := <choose><when test="stopComid != null">#{stopComid,jdbcType=NUMERIC}</when><otherwise>null</otherwise></choose>
              ,pstoppermanentidentifier  := null
              ,pstopreachcode            := null
              ,pstopmeasure              := null
              ,pmaxdistancekm            := <choose><when test="distance != null">#{distance,jdbcType=NUMERIC}</when><otherwise>null</otherwise></choose>
              ,pmaxflowtimehour          := null
              ,pdebug                    := 'FALSE'
              ,paddflowlineattributes    := 'FALSE'
              ,paddflowlinegeometry      := 'FALSE'
              );
    </select>

    <select id="getCache" resultType="String">
        select min(session_id) session_id
          from nhdplus_navigation.navigation_cache_status
         where return_code = 0 and
               start_comid = #{comid} and
               navigation_mode = #{navigationMode}
        <choose>
            <when test="null != distance">
                and max_distance = #{distance}
            </when>
            <otherwise>
                and max_distance is null
            </otherwise>
        </choose>
        <choose>
            <when test="null != stopComid">
                and stop_comid = #{stopComid}
            </when>
            <otherwise>
                and stop_comid is null
            </otherwise>
        </choose>
    </select>

    <sql id="core">
        <choose>
            <when test="navigationMode == 'DM'">
                <include refid="navigate.DM"/>
            </when>
            <when test="navigationMode == 'DD'">
                <include refid="navigate.DD"/>
            </when>
            <when test="navigationMode == 'UM'">
                <include refid="navigate.UM"/>
            </when>
            <when test="navigationMode == 'UT'">
                <include refid="navigate.UT"/>
            </when>
        </choose>
    </sql>

    <sql id="DM">
        with
            recursive nav(comid, terminalpathid, dnhydroseq, stoplength)
                as (select comid, terminalpathid, dnhydroseq,
                           pathlength + lengthkm <if test="null != distance">- #{distance}</if> stoplength
                      from nhdplus.plusflowlinevaa_np21
                     where comid = #{comid,jdbcType=NUMERIC}
                    union
                    select x.comid, x.terminalpathid, x.dnhydroseq, nav.stoplength
                      from nhdplus.plusflowlinevaa_np21 x,
                           nav
                     where x.hydroseq = nav.dnhydroseq and
                           x.terminalpathid = nav.terminalpathid
                           <if test="null != distance">
                               and x.pathlength + x.lengthkm >= nav.stoplength
                           </if>
                   ),
            navigation_results
                as (select comid
                      from nav
                   )
    </sql>

    <sql id="DD">
        with
            recursive nav(comid, dnhydroseq, dnminorhyd, stoplength, terminalflag)
                as (select comid, dnhydroseq, dnminorhyd,
                           pathlength + lengthkm <if test="null != distance">- #{distance}</if> stoplength,
                           terminalflag
                      from nhdplus.plusflowlinevaa_np21
                     where comid = #{comid,jdbcType=NUMERIC}
                    union
                    select x.comid, x.dnhydroseq, x.dnminorhyd, nav.stoplength, x.terminalflag
                      from nhdplus.plusflowlinevaa_np21 x,
                           nav
                     where (x.hydroseq = nav.dnhydroseq or
                            (nav.dnminorhyd != 0 and
                             x.hydroseq = nav.dnminorhyd)) and
                           nav.terminalflag != 1
                           <if test="null != distance">
                               and x.pathlength + x.lengthkm >= nav.stoplength
                           </if>
                   ),
            navigation_results
                as (select comid
                      from nav
                   )
    </sql>

    <sql id="UM">
        with
            recursive nav(comid, levelpathid, uphydroseq, stoplength)
                as (select comid, levelpathid, uphydroseq,
                           pathlength + 0 <if test="null != distance">+ #{distance}</if> stoplength
                      from nhdplus.plusflowlinevaa_np21
                     where comid = #{comid,jdbcType=NUMERIC}
                    union all
                    select x.comid, x.levelpathid, x.uphydroseq, nav.stoplength
                      from nhdplus.plusflowlinevaa_np21 x,
                           nav
                     where x.hydroseq = nav.uphydroseq and
                           x.levelpathid = nav.levelpathid
                           <if test="null != distance">
                               and x.pathlength &lt;= nav.stoplength
                           </if>
                   ),
            navigation_results
                as (select comid
                      from nav
                   )
    </sql>

    <sql id="UT">
        with
            recursive navigation_results(comid, hydroseq, startflag, stoplength)
                as (select comid, hydroseq, startflag,
                           pathlength + 0 <if test="null != distance">+ #{distance}</if> stoplength
                      from nhdplus.plusflowlinevaa_np21
                     where comid = #{comid,jdbcType=NUMERIC}
                    union all
                    select x.comid, x.hydroseq, x.startflag, navigation_results.stoplength
                      from nhdplus.plusflowlinevaa_np21 x,
                           navigation_results
                     where navigation_results.startflag != 1 and
                           x.dnhydroseq = navigation_results.hydroseq
                           <if test="null != distance">
                               and x.pathlength &lt;= navigation_results.stoplength
                           </if>
                   )
    </sql>

</mapper>