sudo: required

language: java

services:
  - docker

jdk:
  - oraclejdk8

addons:
  postgresql: 9.6
  apt:
    packages:
    - postgresql-9.6-postgis-2.3

env:
  - DOCKER_IMAGE=nldi-services

before_install:
  - cd ~
  - git clone https://github.com/ACWI-SSWD/nldi-db.git
  - wget https://cida.usgs.gov/artifactory/nldi/datasets/nhdplus.yahara.pgdump.gz
  - wget https://cida.usgs.gov/artifactory/nldi/datasets/characteristic_data.yahara.pgdump.gz
  - mkdir ~/liquibase
  - cd ~/liquibase
  - wget https://github.com/liquibase/liquibase/releases/download/liquibase-parent-3.4.2/liquibase-3.4.2-bin.tar.gz
  - tar -xzf liquibase-3.4.2-bin.tar.gz -C ./
  - cd ~/liquibase/lib
  - wget https://jdbc.postgresql.org/download/postgresql-9.4-1204.jdbc42.jar
  - curl -L https://github.com/arminc/clair-scanner/releases/download/v8/clair-scanner_linux_amd64 > clair-scanner
  - chmod +x clair-scanner
  - sudo mv clair-scanner /usr/local/bin
  - cd $TRAVIS_BUILD_DIR
  - openssl genrsa -out .travis/wildcard.key 2048
  - openssl req -nodes -newkey rsa:2048 -keyout  .travis/wildcard.key -out  .travis/wildcard.csr -subj "/C=US/ST=Wisconsin/L=Middleon/O=US Geological Survey/OU=WMA/CN=*"
  - openssl x509 -req -days 9999 -in .travis/wildcard.csr -signkey .travis/wildcard.key  -out .travis/wildcard.crt
  - docker run -d -p 8443:443 -v ${PWD}/.travis/nginx.conf:/etc/nginx/nginx.conf -v ${PWD}/.travis/wildcard.crt:/etc/nginx/wildcard.crt -v ${PWD}/.travis/wildcard.key:/etc/nginx/wildcard.key nginx:latest && sleep 5
  - docker pull localhost:8443/wma/wma-spring-boot-base:latest
  - docker tag localhost:8443/wma/wma-spring-boot-base:latest cidasdpdasartip.cr.usgs.gov:8447/wma/wma-spring-boot-base:latest
  - git clone https://github.com/docker/docker-bench-security.git

install:
  - cd $TRAVIS_BUILD_DIR
  - touch secrets.env
  - docker-compose up -d $DOCKER_IMAGE

before_script:
  - psql -U postgres -c 'create database nldi;'
  - psql -U postgres -c "create extension postgis"
  - psql -U postgres -c "create role nldi with superuser login;"
  - ~/liquibase/liquibase --driver=org.postgresql.Driver --url=jdbc:postgresql://127.0.0.1:5432/nldi --username=postgres --password= --changeLogFile=/home/travis/nldi-db/nldi-liquibase/src/main/resources/liquibase/postgres/changeLog.xml update
  - ~/liquibase/liquibase --driver=org.postgresql.Driver --url=jdbc:postgresql://127.0.0.1:5432/nldi --username=postgres --password= --changeLogFile=/home/travis/nldi-db/nldi-liquibase/src/main/resources/liquibase/changeLog.xml update
  - gunzip -c ~/nhdplus.yahara.pgdump.gz | pg_restore --data-only | psql -h 127.0.0.1 -p 5432 -U postgres -w -a -d nldi
  - gunzip -c ~/characteristic_data.yahara.pgdump.gz | pg_restore --data-only | psql -h 127.0.0.1 -p 5432 -U postgres -w -a -d nldi
  - cd $TRAVIS_BUILD_DIR
  - echo "<settings><profiles><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation>
              <properties>
              <nldi.url>jdbc:postgresql://127.0.0.1:5432/nldi</nldi.url>
              <nldi.dbUsername>nldi_user</nldi.dbUsername><nldi.dbPassword></nldi.dbPassword>
              <nldi.dbUnitUsername>nldi</nldi.dbUnitUsername><nldi.dbUnitPassword></nldi.dbUnitPassword>
              </properties></profile></profiles></settings>"
        > ~/settings.xml

script:
  - mvn verify --settings ~/settings.xml
  - cd docker-bench-security
  - sudo sh docker-bench-security.sh -c container_images
  - docker run -d --name db arminc/clair-db
  - docker run -p 6060:6060 --link db:postgres -d --name clair arminc/clair-local-scan:v2.0.3
  - clair-scanner -c "http://127.0.0.1:6060" --ip "$(ip -4 addr show eth0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}')" $DOCKER_IMAGE:latest || true
